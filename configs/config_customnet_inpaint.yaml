model:
  base_learning_rate: 1.0e-05
  target: custom_net.customnet_inpaint.CustomNet
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "image_target"
    cond_stage_key: "image_cond"
    image_size: 32
    channels: 4
    cond_stage_trainable: false   # Note: different from the one we trained before
    conditioning_key: hybrid
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: false
    use_cond_concat: true
    use_bbox_mask: false
    use_bg_inpainting: true
    learning_rate_scale: 10

    ucg_training:
      txt: 0.5

    sd_15_ckpt: #"v1-5-pruned-emaonly.ckpt"

    unet_config:
      target: custom_net.openaimodeli.UNetModel
      params:
        image_size: 32 # unused
        in_channels: 12
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False



    first_stage_config:
      target: custom_net.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity


    cond_stage_config:
      target: custom_net.modules.FrozenCLIPImageEmbedder


    text_encoder_config:
      target: custom_net.modules.FrozenCLIPEmbedder
      params:
        version: openai/clip-vit-large-patch14









## this is a template dataset, NOTE: Need to add a background condition 
train_data:
  target: data.dataset_inpaint.Dataset
  params:
    image_size: 256
    root: examples/dataset/




train_dataloader:
  batch_size: 12
  num_workers: 8






lightning:
  find_unused_parameters: false
  metrics_over_trainsteps_checkpoint: True
  modelcheckpoint:
    params:
      every_n_train_steps: 10000
      save_top_k: -1
      monitor: null
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 2500
        max_images: 32
        increase_log_steps: False
        log_first_step: True
        log_images_kwargs:
          use_ema_scope: False
          inpaint: False
          plot_progressive_rows: False
          plot_diffusion_rows: False
          N: 32
          unconditional_guidance_scale: 3.0
          unconditional_guidance_label: [""]

  trainer:
    benchmark: True
    limit_val_batches: 0 
    num_sanity_val_steps: 0
    accumulate_grad_batches: 1
